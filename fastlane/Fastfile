

#default_platform :ios
#platform :ios do


#Variables
app_language = "English" #CHANGE
app_name = "Sample Testing" # CHANGE
hockey_api_token = "90fc8b51202f48bf9aa9772a7238f946" 
enterprise_wildcard = "cz.ackee.enterprise.*" # Do not change if you don't have to (We don't want to create provisioning profile for every app)

fastlane_version "1.53.0"




desc "Installs FixCode which disables the \"Fix Issue\" button in Xcode"
  lane :xcode do
    install_xcode_plugin(
      url: "https://github.com/fastlane/FixCode/releases/download/0.2.0/FixCode.xcplugin.zip"
    )
end




	before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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" # Webhook URL created in Slack
  end


  desc "Runs linting (and eventually static analysis)"
  lane :analyze do
  	sh "utils/closure_leak_check.sh ../Source"
    #return if test_disabled?
   	#swiftlint(
   			#files option not in this version
   			#files: [
   			#	'AppDelegate.swift',
   			#]
   		#)
  end

  desc "Runs all unit tests."
  lane :test do
    
  	cocoapods
    #if is_ci
      scan(scheme:"Development", skip_slack: false)
    #else
      #scan(scheme:"Development")
    #end
  
  end

 



  desc "Submit new **Beta** build to Hockey app"
  lane :beta do
  	
  	#ensure_git_status_clean
   	
  	build_number = number_of_commits
		increment_build_number(build_number: build_number)

		update_info_plist(
			plist_path: "Source/Project-Info.plist",
		  display_name: "#{app_name} #{build_number}",  
		  app_identifier: CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
		)

    sigh(
    	app_identifier: enterprise_wildcard # Have to put wildcard here
    )
    gym(
		  scheme: "AppStore",
		  clean: true,
		)
		hockey(
			api_token: hockey_api_token,
      notes: '',
      notify: '0', # Means do not notify
      status: '1', # Means do not make available for download
    )

    slack(
        message: "New version uploaded to HockeyApp pyco!",
        success: true
      )
  end

  desc "Deploy new version to the App Store (and also hockey app)"
  lane :appstore do

  	build_number = number_of_commits
		increment_build_number(build_number: build_number)

  	#ensure_git_status_clean
		produce(
    	app_name: app_name,
    	language: app_language,
    )

    snapshot
    sigh
    gym(
		  scheme: "AppStore",
		  clean: true,
		)
		hockey(
			api_token: hockey_api_token,
      notes: '',
      notify: '0', # Means do not notify
      status: '1', # Means do not make available for download
    )
    deliver 

    slack(
        message: "Deployed new version to AppStore pyco!",
        success: true
      )
  end

  after_all do |lane|
  
  end

  error do |lane, exception|
  	if is_ci
      slack(
        message: exception.message,
        success: false
      )
    end
  end
  
#end