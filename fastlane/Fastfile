ENV["GYM_OUTPUT_DIRECTORY"] = "./fastlane/outputs/"

xcversion version: "~> 9.0"

lane :carthage do
end

lane :pods do
    sh "pod install || pod install --repo-update"
end

lane :provisioning do |options|
    SCHEME = options[:scheme] || UI.select("Select environment: ", ["Development", "Stage", "Production"])

    if SCHEME == "Development" then
        # match
    elsif SCHEME == "Stage" then
        # match
    elsif SCHEME == "Production" then
        # match
    end
end

lane :beta do
    SCHEME = "Stage"
    CONFIGURATION = "AdHoc"

    # badge

    gym(scheme: SCHEME,
        configuration: CONFIGURATION,
        export_options: {
            method: "enterprise",
            provisioningProfiles: provisioning_mapping()
        }
    )

    # hockey
end

lane :test do |options|
    TYPE = options[:type] || UI.select("Select test type: ", ["ui", "unit"])

    if TYPE == "ui" then
        scan(scheme: "UITests")
    elsif TYPE == "unit"
        scan(scheme: "Development")
    end
end

lane :appstore do
    SCHEME = "Production"
    CONFIGURATION = "AppStore"

    gym(scheme: SCHEME,
        configuration: CONFIGURATION,
        clean: true,
        export_options: {
            method: "app-store",
            provisioningProfiles: provisioning_mapping()
        }
    )

    # deliver
end

def provisioning_mapping()
    return nil
end
