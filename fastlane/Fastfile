fastlane_version "1.53.0"

default_platform :ios

platform :ios do


desc "Installs FixCode which disables the \"Fix Issue\" button in Xcode"
  lane :xcode do
    install_xcode_plugin(
      url: "https://github.com/fastlane/FixCode/releases/download/0.2.0/FixCode.xcplugin.zip"
    )
end


desc "Runs all the unit and ui tests"

	before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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" # Webhook URL created in Slack
  end


  desc "Runs linting (and eventually static analysis)"
  lane :analyze do
  	sh "utils/closure_leak_check.sh ../Source"
    #return if test_disabled?
   	#swiftlint(
   			#files option not in this version
   			#files: [
   			#	'AppDelegate.swift',
   			#]
   		#)
  end

  desc "Runs all the unit tests."
  lane :test do
    
  	cocoapods
    #if is_ci
      scan(scheme:"Development", skip_slack: false)
    #else
      #scan(scheme:"Development")
    #end
  
  end

  desc "Submit new **Beta** build to Hockey app"
  lane :beta do
  	ensure_git_status_clean
    snapshot
    sigh
    gym(
		  #workspace: "MyApp.xcworkspace",
		  configuration: "Debug",
		  scheme: "AppStore",
		  #silent: true,
		  clean: true,
		  #output_directory: "path/to/dir", # Destination directory. Defaults to current directory.
		  #output_name: "my-app.ipa",       # specify the name of the .ipa file to generate (including file extension)
		  #sdk: "10.0"                     # use SDK as the name or path of the base SDK when building the project.
		)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
  	ensure_git_status_clean
    snapshot
    sigh
    gym(
		  #workspace: "MyApp.xcworkspace",
		  configuration: "Debug",
		  scheme: "AppStore",
		  #silent: true,
		  clean: true,
		  #output_directory: "path/to/dir", # Destination directory. Defaults to current directory.
		  #output_name: "my-app.ipa",       # specify the name of the .ipa file to generate (including file extension)
		  #sdk: "10.0"                     # use SDK as the name or path of the base SDK when building the project.
		)
    # hockey(
    #   notes: '',
    #   notify: '0', # Means do not notify
    #   status: '1', # Means do not make available for download
    # )
    # deliver skip_deploy: true, force: true
  end

  after_all do |lane|
  
  end

  error do |lane, exception|
  
  end
  
end